box: microsoft/dotnet:2.0.0-sdk
services:
   - id: mysql
     username: $USERNAME
     password: $PASSWORD
     env:
       MYSQL_ROOT_PASSWORD: inteword 
       MYSQL_DATABASE: locationservice
no-response-timeout: 10 
build:  
  steps:     
    - script:        
        name: restore
        cwd: StatlerWaldorfCorp.LocationService        
        code: |          
          dotnet restore    
    - script:        
        name: build
        cwd: StatlerWaldorfCorp.LocationService        
        code: |          
          dotnet build
    - script:
        name: Create database
        code: mysql -h$MYSQL_PORT_3306_TCP_ADDR -P$MYSQL_PORT_3306_TCP_PORT -uroot -p$MYSQL_ENV_MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS locationservice;"
    - script:  
        name: integration-migrate
        cwd: StatlerWaldorfCorp.LocationService
        code: |
           echo "$MYSQL_PORT_3306_TCP_ADDR"
           export MYSQL__CSTR="Host=$MYSQL_PORT_3306_TCP_ADDR;Port=$MYSQL_PORT_3306_TCP_PORT;Database=locationservice;Username=root;Password=inteword"
           dotnet ef database update    
testUnit:
  steps:
    - script:        
        name: test-restore        
        cwd: StatlerWaldorfCorp.LocationService.Tests        
        code: |           
          dotnet restore    
    - script:        
        name: test-build        
        cwd: StatlerWaldorfCorp.LocationService.Tests        
        code: |          
          dotnet build     
    - script:        
        name: test-run        
        cwd: StatlerWaldorfCorp.LocationService.Tests        
        code: |          
          dotnet test
testIntegration:
  steps:
    - script:    
        name: integration-test-restore    
        cwd: StatlerWaldorfCorp.LocationService.Integration    
        code: |      
          dotnet restore 
    - script:    
        name: integration-test-build    
        cwd: StatlerWaldorfCorp.LocationService.Integration    
        code: |      
          dotnet build 
    - script:    
        name: integration-test-run    
        cwd: StatlerWaldorfCorp.LocationService.Integration     
        code: |      
          dotnet test
Packaging:
  steps:
    - script:        
        name: publish
        cwd: StatlerWaldorfCorp.LocationService        
        code: |          
          dotnet publish -o publish       
    - script:
        name: copy binary
        cwd: StatlerWaldorfCorp.LocationService
        code: |
          cp -r . $WERCKER_OUTPUT_DIR/app
deploy:  
    - script:
        name: enable 
        code : |
          chmod +x /pipeline/source/app/docker_entrypoint.sh
    - internal/docker-push:
        cwd: $WERCKER_OUTPUT_DIR/app
        username: $USERNAME        
        password: $PASSWORD 
        tag: latest
        repository: ihorpetr/microservtest
        registry: https://registry.hub.docker.com
        entrypoint: "/pipeline/source/app/docker_entrypoint.sh" 
